% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R, R/uncache.R
\name{cache}
\alias{cache}
\alias{cache_}
\alias{cache_all}
\alias{uncache}
\alias{uncache_}
\alias{uncache_all}
\title{Cache and uncache an object}
\usage{
cache(object, name = deparse(substitute(object)),
  cache = getOption("cache", "cache"),
  timestamp = getOption("timestamp"), envir = parent.frame(),
  fun = getOption("cache.write", cache_write_rds))

cache_(name, cache = getOption("cache", "cache"),
  timestamp = getOption("timestamp"), envir = parent.frame(),
  fun = getOption("cache.write", cache_write_rds))

cache_all(..., envir = parent.frame())

uncache(name, cache = getOption("cache", "cache"), ...,
  timestamp = getOption("timestamp"), envir = parent.frame(),
  overwrite = TRUE, fun = getOption("cache.read", cache_read_rds))

uncache_(...)

uncache_all(cache = getOption("cache", "cache"),
  envir = parent.frame())
}
\arguments{
\item{object}{object to cache}

\item{name}{string; name for the object defaults to the
\code{default(substitute(object))}}

\item{cache}{character; path to cache directory. The default is
\code{getOption('cache')} or else simply \code{cache}}

\item{timestamp}{string or function (of 0 arguments); timestamp to add to
the filename.}

\item{envir}{environment .. where object to cache or to where object should
be uncached. Defaults to the caller's environment}

\item{fun}{functiontion for writing or reading the objects. Defaults to
\code{\link[=cache_write_rds]{cache_write_rds()}}

\code{cache}/\code{cache_} and \code{uncache}/\code{uncache_} save and restore single objects to
the a \code{cache} directory.

The \code{cache} defaults to the global option 'cache' otherwise
the \code{cache} in the working directory is used. This follows the behavior
in the \emph{ProjectTemplate} package.

\code{uncache_all} restores all files in a cache directory.

\code{cache} also allows for timestamps. The default is to use the global
option \code{timestamp}. This can either be a character vector or a function
of zero arguments that returns an unary length character vector. (Only the
first value is used.)  Common practice is to use \code{Sys.Date} or
\code{Sys.time} for creating the timestamp.

The writing of files is delegated to \code{cache_write_x} functions ...}

\item{...}{additional arguments}

\item{overwrite}{logical; whether to overwrite if it \code{name} already exists
on the environment.}
}
\description{
Caches or uncaches and object in a cache directory
}
\examples{

  \dontrun{
     data(mtcars)
     cache(mtcars)                      # cache/mtcars.rds
     # cache( mtcars, "mycache" )           # mycache/mtcars.rds
     # cache( mtcars, "mycache", Sys.Date ) # mycache/mtcars-YYYY-MM-DD.rds

     # EXPLICIT USE OF timestamp
     # options( timestamp = Sys.Date )
     # cache( mtcars, "mycache" )          # mycache/mtcars-YYYY-MM-DD.rds

     uncache(mtcars)
     # uncache_("mtcars")

     cache_use_rds()
     cache(mtcars)
     if( exists('mtcars') ) rm(mtcars)
     uncache(mtcars)
  }

}
\seealso{
\code{base::saveRDS} \cr
}
