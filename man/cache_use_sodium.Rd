% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache_use_aes.R
\name{cache_use_sodium}
\alias{cache_use_sodium}
\alias{cache_use_aes}
\alias{cache_write_aes}
\alias{cache_read_aes}
\title{Cache objects using AES encryption}
\usage{
cache_use_sodium()

cache_use_aes(...)

cache_write_aes(object, key = getOption("cache.aes_key",
  set_option(cache.aes_key = readline("AES Encryption Key? "))), ...,
  name = deparse(substitute(object)), cache = cache_find())

cache_read_aes(name, key = getOption("cache.aes_key", set_option(cache.aes_key
  = readline("AES Encryption Key? "))), cache = cache_find())
}
\arguments{
\item{object}{object to store.}

\item{key}{string; encrypton key. Defaults to option cache.aes_key}

\item{name}{string; name of object}

\item{cache}{string; path to cache directory. Defaults to \code{\link[=cache_find]{cache_find()}}}

\item{name}{string; name of object in the cache}

\item{cache}{string; path to cache directory. Defaults to \code{\link[=cache_find]{cache_find()}}}
}
\value{
\code{object} (In order to be pipe-able, the object must be returned)
}
\description{
Caches objects with AES encryption using the \emph{sodium} package
}
\details{
Encrypts cached datasets using AES256 encryption provided by the \emph{sodium}
package

\code{cache_write_aes} and \code{cache_read_aes} are functions for
reading and writing AES encrypted objects to/from the cache. In most cases,
\code{\link[=cache]{cache()}} and \code{\link[=uncache]{uncache()}} should be used with \code{\link[=cache_set_aes]{cache_set_aes()}} instead.

The extension given to AES encrypted files is \code{aesrds}.

\code{cache_read_aes} reads an AES encrypted object from the cache. \code{AES}
encrypted objects are
}
\examples{

dontrun{
 cache_use_sodium()
 cache(mtcars)
 if( exists('mtcars') ) rm(mtcars)
 uncache(mtcars)
 fs::dir_ls( cache_find() )
}

  cache_write_aes( iris, "my key" )
  cache_read_aes( 'iris', "my key" )

}
