% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ext.R, R/fs_basename.R, R/fs_ext.R
\name{ext}
\alias{ext}
\alias{fs_basename}
\alias{print.fs_basename}
\alias{fs_ext}
\alias{print.fs_ext}
\title{filename/path extension}
\usage{
ext(path, exts = getOption("fs.exts"))

fs_basename(x = NULL)

\method{print}{fs_basename}(x, ...)

fs_ext(x = NULL)

\method{print}{fs_ext}(x, ...)
}
\arguments{
\item{path}{object such as character, vector, ; values to be converted to character. Character values
should omitting the leading \code{.} (period)}

\item{x}{object; values to be converted to character. Character values
should omitting the leading \code{.} (period)}

\item{x}{object; values to be converted to character. Character values
should omitting the leading \code{.} (period)}
}
\value{
a \code{\link[=fs_ext]{fs_ext()}} object.

a \code{\link[=fs_basename]{fs_basename()}} object.

a \code{\link[=fs_ext]{fs_ext()}} object.
}
\description{
Get the path or file extension allowing for extensions containing \code{.}

A filename extension object allowing for extensions
containing \code{.}

A filename extension object allowing for extensions
containing \code{.}
}
\details{
\code{\link[=ext]{ext()}} returns the extension of a file or path object. \code{ext} returns (the first of):
\itemize{
\item extension matching the \code{exts} arguments which uses the \code{fs.exts} argument by default.
\item character vector after final period.
}

The \code{\link[fs:path_ext]{fs::path_ext()}} takes only the considers the last.

\code{\link[=fs_basename]{fs_basename()}} provides a object for handling file/path extensions. This is
a character vector with a subclass \code{ext} that allows methods to be written
for it.

\code{\link[=fs_ext]{fs_ext()}} provides a object for handling file/path extensions. This is
a character vector with a subclass \code{ext} that allows methods to be written
for it.
}
\examples{

  files <- c("log.tar.gz","log.tar","log.tar.bz")
  known_exts=c("tar.gz","tar.bz")

  ext( files, exts=known_exts )
  ext( files )
  fs::path_ext( files )

  fs_basename( qw(one, two, three) )

  fs_ext( qw(one, two, three) )

}
\seealso{
\itemize{
\item \code{\link[fs:path_ext]{fs::path_ext()}} - This is nearly identical but does not allow extensions
containing \code{.} (periods).
}

\itemize{
\item \code{\link[=fs:path()]{fs:path()()}}
\item \code{\link[fs:path_ext]{fs::path_ext()}}
}

\itemize{
\item \code{\link[=ext]{ext()}}
\item \code{\link[fs:path_ext]{fs::path_ext()}}
}
}
