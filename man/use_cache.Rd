% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_cache.R
\name{use_cache}
\alias{use_cache}
\title{use_cache}
\usage{
use_cache(path = cache_find(), ignore = TRUE, ...,
  git_ignore = ignore, rbuild_ignore = ignore)
}
\arguments{
\item{path}{string; path to cache directory (DEFAULT:NULL)}

\item{ignore}{logical; whether to ignore both .gitignore and rbuildignore}

\item{...}{unused -- requires explicit naming for \code{git_ignore} and \code{rbuild_ignore}}

\item{git_ignore}{logical; whether to put \code{cache} in \code{.gitignore} (DEFAULT: \code{TRUE})}

\item{rbuild_ignore}{logical; whether to put \code{cache} is \code{.Rbuildignore} (DEFAULT: \code{TRUE})}
}
\description{
Add a cache to a project
}
\details{
In most cases, all you need to do is \code{use_cache()}. This will:
\itemize{
\item create a cache directory in your git, rstudio or r package root.
\item add ignore to \code{.gitignore}
\item add ignore to \code{.Rbuildignore}
}

Arguments allow for fine tuning of the behaviors.

\code{path} allows for the cache directory to be specified. If the
directory does not exist, it is created.

\code{git_ignore} controls whether the cache is ignored by git. The default is not
to commit the cache data to git as the cache is seen as a working directory.

\code{rbuild_ignore} controls whether the cache is incorporated into the package
build. The default is not to include them.

\code{cache_use} is an alias for \code{use_cache} that has the conventions of this
package rather than \code{devtools}.
}
\seealso{
\itemize{
\item \code{\link[here:here]{here::here()}}
}
}
